
import React from 'react';
import { Link, useLocation } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { Logo } from '@/components/logo';
import { cn } from '@/lib/utils';

interface SidebarProps {
  isMobile: boolean;
  isOpen: boolean;
  toggleSidebar: () => void;
}

export const Sidebar: React.FC<SidebarProps> = ({ isMobile, isOpen, toggleSidebar }) => {
  const location = useLocation();
  
  // Demo data
  const storageUsed = 32; // GB
  const storageTotal = 100; // GB
  const storagePercentage = (storageUsed / storageTotal) * 100;
  
  const menuItems = [
    { name: 'Files', path: '/dashboard', icon: 'folder' },
    { name: 'Shared', path: '/shared', icon: 'share' },
    { name: 'Recent', path: '/recent', icon: 'clock' },
    { name: 'Photos', path: '/photos', icon: 'image' },
    { name: 'Settings', path: '/settings', icon: 'settings' },
  ];
  
  const renderMobileToggle = () => (
    <div className="absolute right-0 top-4 transform translate-x-full">
      <Button 
        variant="secondary" 
        size="icon" 
        onClick={toggleSidebar}
        className="shadow-md"
      >
        {isOpen ? (
          <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z" fill="currentColor" fillRule="evenodd" clipRule="evenodd"></path>
          </svg>
        ) : (
          <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M1.5 3C1.22386 3 1 3.22386 1 3.5C1 3.77614 1.22386 4 1.5 4H13.5C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3H1.5ZM1 7.5C1 7.22386 1.22386 7 1.5 7H13.5C13.7761 7 14 7.22386 14 7.5C14 7.77614 13.7761 8 13.5 8H1.5C1.22386 8 1 7.77614 1 7.5ZM1 11.5C1 11.2239 1.22386 11 1.5 11H13.5C13.7761 11 14 11.2239 14 11.5C14 11.7761 13.7761 12 13.5 12H1.5C1.22386 12 1 11.7761 1 11.5Z" fill="currentColor" fillRule="evenodd" clipRule="evenodd"></path>
          </svg>
        )}
      </Button>
    </div>
  );
  
  if (isMobile && !isOpen) {
    return (
      <div className="fixed top-4 left-4 z-20">
        <Button 
          variant="secondary" 
          size="icon" 
          onClick={toggleSidebar}
          className="shadow-md"
        >
          <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M1.5 3C1.22386 3 1 3.22386 1 3.5C1 3.77614 1.22386 4 1.5 4H13.5C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3H1.5ZM1 7.5C1 7.22386 1.22386 7 1.5 7H13.5C13.7761 7 14 7.22386 14 7.5C14 7.77614 13.7761 8 13.5 8H1.5C1.22386 8 1 7.77614 1 7.5ZM1 11.5C1 11.2239 1.22386 11 1.5 11H13.5C13.7761 11 14 11.2239 14 11.5C14 11.7761 13.7761 12 13.5 12H1.5C1.22386 12 1 11.7761 1 11.5Z" fill="currentColor" fillRule="evenodd" clipRule="evenodd"></path>
          </svg>
        </Button>
      </div>
    );
  }

  return (
    <aside 
      className={cn(
        "h-screen bg-white border-r border-border p-4 flex flex-col transition-all duration-300 relative z-10 shadow-sm",
        isMobile ? (isOpen ? "fixed w-64" : "hidden") : "w-64"
      )}
    >
      {isMobile && renderMobileToggle()}
      
      <div className="flex items-center justify-between mb-8">
        <Logo />
      </div>
      
      <nav className="flex-1">
        <ul className="space-y-2">
          {menuItems.map((item) => (
            <li key={item.name}>
              <Link to={item.path}>
                <Button 
                  variant={location.pathname === item.path ? "default" : "ghost"} 
                  className={cn(
                    "w-full justify-start text-base h-12",
                    location.pathname === item.path 
                      ? "bg-primary text-white" 
                      : "text-foreground hover:bg-secondary"
                  )}
                >
                  <span className="mr-3">
                    {renderIcon(item.icon)}
                  </span>
                  {item.name}
                </Button>
              </Link>
            </li>
          ))}
        </ul>
      </nav>
      
      <div className="pt-4 border-t mt-6">
        <div className="mb-2 flex justify-between">
          <span className="text-sm font-medium">Storage</span>
          <span className="text-sm text-muted-foreground">
            {storageUsed} GB of {storageTotal} GB
          </span>
        </div>
        <Progress value={storagePercentage} className="h-2" />
        
        <div className="mt-6">
          <Button className="w-full">
            <svg className="mr-2" width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M7.5 1C7.22386 1 7 1.22386 7 1.5V8.5C7 8.77614 7.22386 9 7.5 9C7.77614 9 8 8.77614 8 8.5V1.5C8 1.22386 7.77614 1 7.5 1ZM4.85355 4.14645C4.65829 4.34171 4.65829 4.65829 4.85355 4.85355L7.14645 7.14645C7.34171 7.34171 7.65829 7.34171 7.85355 7.14645L10.1464 4.85355C10.3417 4.65829 10.3417 4.34171 10.1464 4.14645C9.95118 3.95118 9.63461 3.95118 9.43934 4.14645L7.5 6.08579L5.56066 4.14645C5.36539 3.95118 5.04882 3.95118 4.85355 4.14645ZM2.5 10C2.22386 10 2 10.2239 2 10.5C2 10.7761 2.22386 11 2.5 11H12.5C12.7761 11 13 10.7761 13 10.5C13 10.2239 12.7761 10 12.5 10H2.5ZM2 13.5C2 13.2239 2.22386 13 2.5 13H12.5C12.7761 13 13 13.2239 13 13.5C13 13.7761 12.7761 14 12.5 14H2.5C2.22386 14 2 13.7761 2 13.5Z" fill="currentColor" fillRule="evenodd" clipRule="evenodd"></path>
            </svg>
            Upload Files
          </Button>
        </div>
      </div>
    </aside>
  );
};

// Helper function to render icons
function renderIcon(iconName: string) {
  switch (iconName) {
    case 'folder':
      return (
        <svg width="18" height="18" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M2 2.5C2 2.22386 2.22386 2 2.5 2H12.5C12.7761 2 13 2.22386 13 2.5V12.5C13 12.7761 12.7761 13 12.5 13H2.5C2.22386 13 2 12.7761 2 12.5V2.5ZM2.5 1C1.67157 1 1 1.67157 1 2.5V12.5C1 13.3284 1.67157 14 2.5 14H12.5C13.3284 14 14 13.3284 14 12.5V2.5C14 1.67157 13.3284 1 12.5 1H2.5ZM7 10.5C7 10.2239 7.22386 10 7.5 10C7.77614 10 8 10.2239 8 10.5C8 10.7761 7.77614 11 7.5 11C7.22386 11 7 10.7761 7 10.5ZM7.5 4C7.77614 4 8 4.22386 8 4.5V8.5C8 8.77614 7.77614 9 7.5 9C7.22386 9 7 8.77614 7 8.5V4.5C7 4.22386 7.22386 4 7.5 4Z" fill="currentColor" fillRule="evenodd" clipRule="evenodd"></path>
        </svg>
      );
    case 'share':
      return (
        <svg width="18" height="18" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M5 7.5C5 8.32843 4.32843 9 3.5 9C2.67157 9 2 8.32843 2 7.5C2 6.67157 2.67157 6 3.5 6C4.32843 6 5 6.67157 5 7.5ZM11.5 6C10.6716 6 10 6.67157 10 7.5C10 8.32843 10.6716 9 11.5 9C12.3284 9 13 8.32843 13 7.5C13 6.67157 12.3284 6 11.5 6ZM5.88924 8.06292L9.21421 9.43257C9.0389 9.70701 8.93845 10.0293 8.93845 10.375C8.93845 11.2713 9.66715 12 10.5635 12C11.4598 12 12.1885 11.2713 12.1885 10.375C12.1885 9.47868 11.4598 8.75 10.5635 8.75C10.3431 8.75 10.1337 8.79645 9.94231 8.88115L6.61734 7.51151C6.6388 7.4067 6.65 7.29787 6.65 7.1875C6.65 7.07713 6.6388 6.9683 6.61734 6.86349L9.94231 5.49385C10.1337 5.57855 10.3431 5.625 10.5635 5.625C11.4598 5.625 12.1885 4.89632 12.1885 4C12.1885 3.10368 11.4598 2.375 10.5635 2.375C9.66715 2.375 8.93845 3.10368 8.93845 4C8.93845 4.3457 9.0389 4.66795 9.21421 4.94239L5.88924 6.31204C5.697 6.00515 5.36357 5.79141 4.98155 5.75259V8.62237C5.36357 8.58355 5.697 8.36981 5.88924 8.06292Z" fill="currentColor" fillRule="evenodd" clipRule="evenodd"></path>
        </svg>
      );
    case 'clock':
      return (
        <svg width="18" height="18" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M7.5 0.875C3.83152 0.875 0.875 3.83152 0.875 7.5C0.875 11.1685 3.83152 14.125 7.5 14.125C11.1685 14.125 14.125 11.1685 14.125 7.5C14.125 3.83152 11.1685 0.875 7.5 0.875ZM7.5 1.825C10.6461 1.825 13.175 4.35392 13.175 7.5C13.175 10.6461 10.6461 13.175 7.5 13.175C4.35392 13.175 1.825 10.6461 1.825 7.5C1.825 4.35392 4.35392 1.825 7.5 1.825ZM7.5 3.25C7.5 3.11193 7.61193 3 7.75 3C7.88807 3 8 3.11193 8 3.25V7.25C8 7.38807 7.88807 7.5 7.75 7.5H4.75C4.61193 7.5 4.5 7.38807 4.5 7.25C4.5 7.11193 4.61193 7 4.75 7H7.5V3.25Z" fill="currentColor" fillRule="evenodd" clipRule="evenodd"></path>
        </svg>
      );
    case 'image':
      return (
        <svg width="18" height="18" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M2.5 1H12.5C13.3284 1 14 1.67157 14 2.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V2.5C1 1.67157 1.67157 1 2.5 1ZM2.5 2C2.22386 2 2 2.22386 2 2.5V8.3636L3.6818 6.6818C3.76809 6.59551 3.88572 6.54797 4.00774 6.55007C4.12975 6.55216 4.24568 6.60372 4.32895 6.69293L7.87355 10.4901L10.6818 7.6818C10.8575 7.50607 11.1425 7.50607 11.3182 7.6818L13 9.3636V2.5C13 2.22386 12.7761 2 12.5 2H2.5ZM2 12.5V9.6364L3.98867 7.64773L7.5311 11.4421L8.94113 13H2.5C2.22386 13 2 12.7761 2 12.5ZM12.5 13H10.155L8.48336 11.153L11 8.6364L13 10.6364V12.5C13 12.7761 12.7761 13 12.5 13ZM6.64922 5.5C6.64922 5.03013 7.03013 4.64922 7.5 4.64922C7.96987 4.64922 8.35078 5.03013 8.35078 5.5C8.35078 5.96987 7.96987 6.35078 7.5 6.35078C7.03013 6.35078 6.64922 5.96987 6.64922 5.5ZM7.5 3.74922C6.53307 3.74922 5.74922 4.53307 5.74922 5.5C5.74922 6.46693 6.53307 7.25078 7.5 7.25078C8.46693 7.25078 9.25078 6.46693 9.25078 5.5C9.25078 4.53307 8.46693 3.74922 7.5 3.74922Z" fill="currentColor" fillRule="evenodd" clipRule="evenodd"></path>
        </svg>
      );
    case 'settings':
      return (
        <svg width="18" height="18" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M7.07095 0.650238C6.67391 0.650238 6.32977 0.925096 6.24198 1.31231L6.0039 2.36247C5.6249 2.47269 5.26179 2.62363 4.91933 2.81013L4.01446 2.23585C3.67933 2.01136 3.23454 2.04094 2.93795 2.33753L2.30926 2.96621C2.01267 3.2628 1.98309 3.7076 2.20758 4.04272L2.78187 4.94759C2.59536 5.29006 2.44442 5.65316 2.3342 6.03216L1.28407 6.27022C0.896859 6.35801 0.622002 6.70215 0.622002 7.09919V7.90074C0.622002 8.29778 0.896859 8.64192 1.28407 8.72971L2.33417 8.96775C2.4444 9.34672 2.59532 9.70979 2.78181 10.0522L2.20758 10.9571C1.98309 11.2922 2.01267 11.737 2.30926 12.0336L2.93795 12.6623C3.23454 12.9589 3.67933 12.9885 4.01446 12.764L4.91928 12.1897C5.26175 12.3762 5.62488 12.5272 6.0039 12.6374L6.24198 13.6876C6.32977 14.0748 6.67391 14.3497 7.07095 14.3497H7.87249C8.26953 14.3497 8.61367 14.0748 8.70146 13.6876L8.93955 12.6374C9.31856 12.5272 9.68168 12.3762 10.0241 12.1897L10.929 12.764C11.2641 12.9885 11.7089 12.9589 12.0055 12.6623L12.6342 12.0336C12.9307 11.737 12.9603 11.2922 12.7359 10.9571L12.1615 10.0522C12.3481 9.70979 12.499 9.34672 12.6092 8.96775L13.6593 8.72971C14.0466 8.64192 14.3214 8.29778 14.3214 7.90074V7.09919C14.3214 6.70215 14.0466 6.35801 13.6593 6.27022L12.6092 6.03218C12.499 5.65318 12.3481 5.29008 12.1615 4.94759L12.7359 4.04272C12.9603 3.7076 12.9307 3.2628 12.6342 2.96621L12.0055 2.33753C11.7089 2.04094 11.2641 2.01136 10.929 2.23585L10.0242 2.81013C9.68168 2.62363 9.31856 2.47269 8.93955 2.36247L8.70146 1.31231C8.61367 0.925096 8.26953 0.650238 7.87249 0.650238H7.07095ZM4.92478 3.81251C5.36163 3.5441 5.85938 3.35534 6.39865 3.26877C6.63166 3.22925 6.82013 3.05764 6.87814 2.83214L7.16698 1.55024H7.77646L8.06531 2.83214C8.12331 3.05764 8.31178 3.22925 8.5448 3.26877C9.08407 3.35534 9.58182 3.5441 10.0187 3.81251C10.2328 3.94945 10.5047 3.93855 10.7067 3.78797L11.7852 3.0513L12.1908 3.45689L11.4541 4.53542C11.3035 4.73743 11.2926 5.00929 11.4296 5.22342C11.698 5.66027 11.8868 6.15802 11.9733 6.69729C12.0129 6.93031 12.1845 7.11878 12.41 7.17678L13.6919 7.46563V8.0751L12.41 8.36395C12.1845 8.42195 12.0129 8.61042 11.9733 8.84344C11.8868 9.38271 11.698 9.88046 11.4296 10.3173C11.2926 10.5314 11.3035 10.8033 11.4541 11.0053L12.1908 12.0838L11.7852 12.4894L10.7067 11.7527C10.5047 11.6022 10.2328 11.5913 10.0187 11.7282C9.58182 11.9966 9.08407 12.1854 8.5448 12.2719C8.31178 12.3114 8.12331 12.4831 8.06531 12.7086L7.77646 13.9905H7.16698L6.87814 12.7086C6.82013 12.4831 6.63166 12.3114 6.39865 12.2719C5.85938 12.1854 5.36163 11.9966 4.92478 11.7282C4.71064 11.5913 4.43879 11.6022 4.23677 11.7527L3.15825 12.4894L2.75266 12.0838L3.48934 11.0053C3.63992 10.8033 3.65081 10.5314 3.51388 10.3173C3.24547 9.88046 3.0567 9.38271 2.97013 8.84344C2.93062 8.61042 2.75901 8.42195 2.53351 8.36395L1.25161 8.0751V7.46563L2.53351 7.17678C2.75901 7.11878 2.93062 6.93031 2.97013 6.69729C3.0567 6.15802 3.24547 5.66027 3.51388 5.22342C3.65081 5.00929 3.63992 4.73743 3.48934 4.53542L2.75266 3.45689L3.15825 3.0513L4.23677 3.78797C4.43879 3.93855 4.71064 3.94945 4.92478 3.81251ZM7.47173 5.5618C6.27812 5.5618 5.31173 6.52819 5.31173 7.7218C5.31173 8.91541 6.27812 9.8818 7.47173 9.8818C8.66535 9.8818 9.63173 8.91541 9.63173 7.7218C9.63173 6.52819 8.66535 5.5618 7.47173 5.5618ZM7.47173 6.5618C8.1132 6.5618 8.63173 7.08033 8.63173 7.7218C8.63173 8.36326 8.1132 8.8818 7.47173 8.8818C6.83026 8.8818 6.31173 8.36326 6.31173 7.7218C6.31173 7.08033 6.83026 6.5618 7.47173 6.5618Z" fill="currentColor" fillRule="evenodd" clipRule="evenodd"></path>
        </svg>
      );
    default:
      return null;
  }
}
